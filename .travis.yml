os: linux

dist: bionic

language: cpp

git:
  depth: false

services:
  - xvfb

jobs:
  include:
# Linux
    - env: PYTHON="3.7" CONDA_PY=37 ARCH="x86_64"
    - env: PYTHON="3.8" CONDA_PY=38 ARCH="x86_64"
    - env: PYTHON="3.9" CONDA_PY=39 ARCH="x86_64"
# OSX
    - env: PYTHON="3.7" CONDA_PY=37 ARCH="x86_64"
      os: osx
      osx_image: xcode9.4
    - env: PYTHON="3.8" CONDA_PY=38 ARCH="x86_64"
      os: osx
      osx_image: xcode9.4
    - env: PYTHON="3.9" CONDA_PY=39 ARCH="x86_64"
      os: osx
      osx_image: xcode9.4
# Windows

before_install:
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then
      MINICONDA_PATH=$HOME/miniconda;
      MINICONDA_SUB_PATH=$MINICONDA_PATH/bin;
    elif [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      MINICONDA_PATH=/c/tools/miniconda3;
      MINICONDA_SUB_PATH=$MINICONDA_PATH/Scripts;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi

install:
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then
      chmod +x miniconda.sh;
      yes | ./miniconda.sh -b -p $MINICONDA_PATH;
    elif  [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      echo "installing miniconda for windows";
      choco install openssl.light;
      choco install miniconda3;
    fi;
  - export PATH="$MINICONDA_PATH:$MINICONDA_SUB_PATH:$PATH";
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # create a test environment
  - conda create -n test_pythonocc python=$PYTHON
  # switch to this environment
  - source activate test_pythonocc
  - conda install -c conda-forge pythonocc-core=7.5.1
  - conda install pyqt
  - conda install numpy

script:
  - python -c "import OCC.Core.gp"
  - sh run_examples.sh
